name: Build and Push Notification Service

on:
  push:
    branches: [ release ]
    paths:
      - 'notification-service/**'
      - 'requirements.txt'
      - 'docker-compose.yml'
  pull_request:
    branches: [ release ]
    paths:
      - 'notification-service/**'
      - 'requirements.txt'
      - 'docker-compose.yml'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate requirements
      run: |
        echo "üîç Validating requirements.txt..."
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt --dry-run || (echo "‚ùå Requirements validation failed" && exit 1)
        echo "‚úÖ Requirements validation passed"
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/microservices-notification-service
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Notification Service
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./notification-service/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Test the image
      run: |
        docker run --rm ${{ secrets.DOCKERHUB_USERNAME }}/microservices-notification-service:${{ github.sha }} python -c "print('Notification Service image test successful')"
        
    - name: Notify on success
      if: success()
      run: |
        echo "‚úÖ Notification Service successfully built and pushed to Docker Hub"
        echo "Image: ${{ secrets.DOCKERHUB_USERNAME }}/microservices-notification-service:${{ github.sha }}"
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Notification Service build failed"
        exit 1 